# Filename: docker-compose.yml
# This docker-compose file sets up the application service along with a PostgreSQL database.
# It's configured for a production-like environment with persistent data and networking.

version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Pass database connection details to the application
      - NODE_ENV=production
      - DATABASE_HOST=db
      - DATABASE_USER=appuser
      - DATABASE_PASSWORD=supersecret
      - DATABASE_NAME=appdb
      - DATABASE_PORT=5432
    networks:
      - app-network

  # PostgreSQL Database service
  db:
    image: postgres:16-alpine
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=supersecret
      - POSTGRES_DB=appdb
    volumes:
      # Persist database data on the host machine
      - postgres_data:/var/lib/postgresql/data
    ports:
      # Expose port only to the host for debugging, remove for production if not needed
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5

# Define the network for services to communicate
networks:
  app-network:
    driver: bridge

# Define the named volume for data persistence
volumes:
  postgres_data:
    driver: local
